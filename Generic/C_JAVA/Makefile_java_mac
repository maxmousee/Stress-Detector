LIB_NAME = VSDJNI
CFLAGS = -I $(JAVA_HOME)/include/ -I $(JAVA_HOME)/include/darwin/ -I $(JAVA_HOME)/include/linux/ -Iinclude -fPIC
LFLAGS = -I $(JAVA_HOME)/include/ -I $(JAVA_HOME)/include/darwin/ -I $(JAVA_HOME)/include/linux/ -Llib -Wl,-rpath,\$$ORIGIN/../lib

EXE_SRC_FILES = $(wildcard *.cpp)
EXECUTABLES = $(patsubst %.cpp,bin/%,$(EXE_SRC_FILES))
SRC_FILES = $(wildcard *.cpp)
O_FILES = $(patsubst %.cpp,build/%.o,$(SRC_FILES))

all: $(EXECUTABLES) lib/lib$(LIB_NAME).dylib

bin/%: build/%.o | lib/lib$(LIB_NAME).dylib
	mkdir -p $(@D)
	g++ -c $< $(LFLAGS) -o $@

lib/lib$(LIB_NAME).dylib: $(O_FILES)
	mkdir -p $(@D)
	g++ $^ -dynamiclib -Wl -o $@

build/%.o: %.cpp
	mkdir -p $(@D)
	g++ -c $(CFLAGS) $< -o $@

clean:
	rm -rf bin build lib

CFLAGS += -MMD
-include $(shell find build -name "*.d" 2> /dev/null)