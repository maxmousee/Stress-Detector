LIB_NAME = VSDJNI
CFLAGS = -Iinclude -fPIC
LFLAGS = -Llib -l$(LIB_NAME) -Wl,-rpath,\$$ORIGIN

EXE_SRC_FILES = $(wildcard *.cpp)
EXECUTABLES = $(patsubst %.cpp,bin/%,$(EXE_SRC_FILES))
SRC_FILES = $(wildcard *.cpp)
O_FILES = $(patsubst %.cpp,build/%.o,$(SRC_FILES))

all: $(EXECUTABLES) lib$(LIB_NAME).so

bin/%: build/%.o | lib$(LIB_NAME).so
	mkdir -p $(@D)
	g++ $< $(LFLAGS) -o $@

lib$(LIB_NAME).so: $(O_FILES)
	mkdir -p $(@D)
	g++ $^ -shared -Wl,-soname,lib$(LIB_NAME).so -o $@

build/%.o: %.cpp
	mkdir -p $(@D)
	g++ -c $(CFLAGS) $< -o $@

clean:
	rm -rf bin build lib

CFLAGS += -MMD
-include $(shell find build -name "*.d" 2> /dev/null)